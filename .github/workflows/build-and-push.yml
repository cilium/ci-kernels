name: Build and Push

on:
  workflow_call:
    inputs:
      kernel_version:
        required: true
        type: string
      build_selftests:
        required: true
        type: boolean
      build_arm64:
        required: true
        type: boolean
      static_tag:
        required: false
        type: string

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache ccache output
      uses: actions/cache@v3
      with:
        path: ccache
        key: ccache-${{ inputs.kernel_version }}-${{ hashFiles('config') }}

    - name: Inject ccache into builder
      uses: reproducible-containers/buildkit-cache-dance@v2.1.3
      with:
        cache-source: ccache
        cache-target: /ccache

    - name: Kernel metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository_owner }}/ci-kernels
        flavor: latest=false
        tags: |
          type=raw,value=${{ inputs.kernel_version }}
          type=match,pattern=^\d+\.\d+,group=0,value=${{ inputs.kernel_version }}
          type=raw,value=${{ inputs.static_tag }},enable=${{ inputs.static_tag != '' }}

        labels: |
          org.opencontainers.image.licenses=GPLv2
          org.opencontainers.image.created=
          org.opencontainers.image.revision=
        annotations: |
          org.opencontainers.image.licenses=GPLv2
          org.opencontainers.image.created=
          org.opencontainers.image.revision=

    - name: Selftests metadata
      id: selftests-meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository_owner }}/ci-kernels
        flavor: latest=false
        tags: |
          type=raw,value=${{ inputs.kernel_version }},suffix=-selftests
          type=match,pattern=^\d+\.\d+,group=0,value=${{ inputs.kernel_version }},suffix=-selftests
          type=raw,value=${{ inputs.static_tag }},suffix=-selftests,enable=${{ inputs.static_tag != '' }}
        labels: |
          org.opencontainers.image.licenses=GPLv2
          org.opencontainers.image.created=
          org.opencontainers.image.revision=
        annotations: |
          org.opencontainers.image.licenses=GPLv2
          org.opencontainers.image.created=
          org.opencontainers.image.revision=

    - name: Log in to GitHub Container Registry
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build kernel
      uses: docker/build-push-action@v5
      with:
        target: vmlinux
        provenance: false
        platforms: |
          linux/amd64
          ${{ inputs.build_arm64 && 'linux/arm64' || '' }}
        build-args: |
          KERNEL_VERSION=${{ inputs.kernel_version }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        annotations: ${{ steps.meta.outputs.annotations }}
        outputs: ${{ github.ref == 'refs/heads/main' && 'type=registry' || 'type=local,dest=/tmp/build/vmlinux' }}

    - name: Build selftests
      if: inputs.build_selftests
      uses: docker/build-push-action@v5
      with:
        target: selftests-bpf
        provenance: false
        platforms: |
          linux/amd64
        build-args: |
          KERNEL_VERSION=${{ inputs.kernel_version }}
        tags: ${{ steps.selftests-meta.outputs.tags }}
        labels: ${{ steps.selftests-meta.outputs.labels }}
        annotations: ${{ steps.selftests-meta.outputs.annotations }}
        outputs: ${{ github.ref == 'refs/heads/main' && 'type=registry' || 'type=local,dest=/tmp/build/selftests-bpf' }}

    - name: Store artifacts
      if: github.ref != 'refs/heads/main'
      uses: actions/upload-artifact@v3
      with:
        name: Artifacts (${{ inputs.kernel_version }})
        if-no-files-found: error
        path: '/tmp/build/'
        retention-days: 1
