commit e3d03598e8ae7d195af5d3d049596dec336f569f
Author: H.J. Lu <hjl.tools@gmail.com>
Date:   Mon Mar 19 13:57:46 2018 -0700

    x86/build/64: Force the linker to use 2MB page size
    
    Binutils 2.31 will enable -z separate-code by default for x86 to avoid
    mixing code pages with data to improve cache performance as well as
    security.  To reduce x86-64 executable and shared object sizes, the
    maximum page size is reduced from 2MB to 4KB.  But x86-64 kernel must
    be aligned to 2MB.  Pass -z max-page-size=0x200000 to linker to force
    2MB page size regardless of the default page size used by linker.
    
    Tested with Linux kernel 4.15.6 on x86-64.
    
    Signed-off-by: H.J. Lu <hjl.tools@gmail.com>
    Cc: Andy Shevchenko <andy.shevchenko@gmail.com>
    Cc: Eric Biederman <ebiederm@xmission.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/CAMe9rOp4_%3D_8twdpTyAP2DhONOCeaTOsniJLoppzhoNptL8xzA@mail.gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

diff --git a/arch/x86/Makefile b/arch/x86/Makefile
index 498c1b812300..1c4d012550ec 100644
--- a/arch/x86/Makefile
+++ b/arch/x86/Makefile
@@ -223,6 +223,15 @@ KBUILD_CFLAGS += $(cfi) $(cfi-sigframe) $(cfi-sections) $(asinstr) $(avx_instr)
 
 LDFLAGS := -m elf_$(UTS_MACHINE)
 
+#
+# The 64-bit kernel must be aligned to 2MB.  Pass -z max-page-size=0x200000 to
+# the linker to force 2MB page size regardless of the default page size used
+# by the linker.
+#
+ifdef CONFIG_X86_64
+LDFLAGS += $(call ld-option, -z max-page-size=0x200000)
+endif
+
 # Speed up the build
 KBUILD_CFLAGS += -pipe
 # Workaround for a gcc prelease that unfortunately was shipped in a suse release
